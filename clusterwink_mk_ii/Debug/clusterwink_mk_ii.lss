
clusterwink_mk_ii.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000460  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000040c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000460  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000490  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000a8  00000000  00000000  000004d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000009c7  00000000  00000000  00000578  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007c3  00000000  00000000  00000f3f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000050e  00000000  00000000  00001702  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000298  00000000  00000000  00001c10  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000472  00000000  00000000  00001ea8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000521  00000000  00000000  0000231a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000088  00000000  00000000  0000283b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
   8:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
   c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  10:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  14:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  18:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  1c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  20:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  24:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  28:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  2c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  30:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  34:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  38:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  3c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  40:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  44:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  48:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  4c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  50:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  54:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  58:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  5c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  60:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  64:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  68:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  6c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  70:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  74:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  78:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d8 e0       	ldi	r29, 0x08	; 8
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61
  88:	0e 94 4a 00 	call	0x94	; 0x94 <main>
  8c:	0c 94 04 02 	jmp	0x408	; 0x408 <_exit>

00000090 <__bad_interrupt>:
  90:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000094 <main>:
#include <avr/io.h>
#include "utils.h"


int main(void)
{
  94:	cf 93       	push	r28
  96:	df 93       	push	r29
  98:	1f 92       	push	r1
  9a:	cd b7       	in	r28, 0x3d	; 61
  9c:	de b7       	in	r29, 0x3e	; 62
    uint8_t u8Duty = 0;
  9e:	19 82       	std	Y+1, r1	; 0x01
	uint16_t i;
	
	portInit();
  a0:	0e 94 5a 00 	call	0xb4	; 0xb4 <portInit>
	initPWM(0);
  a4:	80 e0       	ldi	r24, 0x00	; 0
  a6:	0e 94 b2 00 	call	0x164	; 0x164 <initPWM>
	startPWM();
  aa:	0e 94 11 01 	call	0x222	; 0x222 <startPWM>
	//enablePLED();
	enableAudio();
  ae:	0e 94 98 00 	call	0x130	; 0x130 <enableAudio>
    {
// 		setDuty(0);
// 		wait_1ms(1000);
// 		setDuty(1);
// 		wait_1ms(1000);
    }
  b2:	ff cf       	rjmp	.-2      	; 0xb2 <main+0x1e>

000000b4 <portInit>:
	{
		while(!(TIFR0&(1<<OCF0A)));	// poll flag
		TIFR0 =  (1<<OCF0A);		// clear flag
	}
	TCCR0B &= ~(0x07);	// set prescaler to 0 (stop timer)
}
  b4:	cf 93       	push	r28
  b6:	df 93       	push	r29
  b8:	cd b7       	in	r28, 0x3d	; 61
  ba:	de b7       	in	r29, 0x3e	; 62
  bc:	8a e2       	ldi	r24, 0x2A	; 42
  be:	90 e0       	ldi	r25, 0x00	; 0
  c0:	2a e2       	ldi	r18, 0x2A	; 42
  c2:	30 e0       	ldi	r19, 0x00	; 0
  c4:	f9 01       	movw	r30, r18
  c6:	20 81       	ld	r18, Z
  c8:	20 63       	ori	r18, 0x30	; 48
  ca:	fc 01       	movw	r30, r24
  cc:	20 83       	st	Z, r18
  ce:	8b e2       	ldi	r24, 0x2B	; 43
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	2b e2       	ldi	r18, 0x2B	; 43
  d4:	30 e0       	ldi	r19, 0x00	; 0
  d6:	f9 01       	movw	r30, r18
  d8:	20 81       	ld	r18, Z
  da:	20 62       	ori	r18, 0x20	; 32
  dc:	fc 01       	movw	r30, r24
  de:	20 83       	st	Z, r18
  e0:	8b e2       	ldi	r24, 0x2B	; 43
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	2b e2       	ldi	r18, 0x2B	; 43
  e6:	30 e0       	ldi	r19, 0x00	; 0
  e8:	f9 01       	movw	r30, r18
  ea:	20 81       	ld	r18, Z
  ec:	2f 7e       	andi	r18, 0xEF	; 239
  ee:	fc 01       	movw	r30, r24
  f0:	20 83       	st	Z, r18
  f2:	8a e2       	ldi	r24, 0x2A	; 42
  f4:	90 e0       	ldi	r25, 0x00	; 0
  f6:	2a e2       	ldi	r18, 0x2A	; 42
  f8:	30 e0       	ldi	r19, 0x00	; 0
  fa:	f9 01       	movw	r30, r18
  fc:	20 81       	ld	r18, Z
  fe:	20 68       	ori	r18, 0x80	; 128
 100:	fc 01       	movw	r30, r24
 102:	20 83       	st	Z, r18
 104:	8b e2       	ldi	r24, 0x2B	; 43
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	2b e2       	ldi	r18, 0x2B	; 43
 10a:	30 e0       	ldi	r19, 0x00	; 0
 10c:	f9 01       	movw	r30, r18
 10e:	20 81       	ld	r18, Z
 110:	20 68       	ori	r18, 0x80	; 128
 112:	fc 01       	movw	r30, r24
 114:	20 83       	st	Z, r18
 116:	8a e2       	ldi	r24, 0x2A	; 42
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	2a e2       	ldi	r18, 0x2A	; 42
 11c:	30 e0       	ldi	r19, 0x00	; 0
 11e:	f9 01       	movw	r30, r18
 120:	20 81       	ld	r18, Z
 122:	2f 7b       	andi	r18, 0xBF	; 191
 124:	fc 01       	movw	r30, r24
 126:	20 83       	st	Z, r18
 128:	00 00       	nop
 12a:	df 91       	pop	r29
 12c:	cf 91       	pop	r28
 12e:	08 95       	ret

00000130 <enableAudio>:
 130:	cf 93       	push	r28
 132:	df 93       	push	r29
 134:	cd b7       	in	r28, 0x3d	; 61
 136:	de b7       	in	r29, 0x3e	; 62
 138:	8b e2       	ldi	r24, 0x2B	; 43
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	2b e2       	ldi	r18, 0x2B	; 43
 13e:	30 e0       	ldi	r19, 0x00	; 0
 140:	f9 01       	movw	r30, r18
 142:	20 81       	ld	r18, Z
 144:	2f 77       	andi	r18, 0x7F	; 127
 146:	fc 01       	movw	r30, r24
 148:	20 83       	st	Z, r18
 14a:	8a e2       	ldi	r24, 0x2A	; 42
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	2a e2       	ldi	r18, 0x2A	; 42
 150:	30 e0       	ldi	r19, 0x00	; 0
 152:	f9 01       	movw	r30, r18
 154:	20 81       	ld	r18, Z
 156:	27 60       	ori	r18, 0x07	; 7
 158:	fc 01       	movw	r30, r24
 15a:	20 83       	st	Z, r18
 15c:	00 00       	nop
 15e:	df 91       	pop	r29
 160:	cf 91       	pop	r28
 162:	08 95       	ret

00000164 <initPWM>:
 164:	8f 92       	push	r8
 166:	9f 92       	push	r9
 168:	af 92       	push	r10
 16a:	bf 92       	push	r11
 16c:	cf 92       	push	r12
 16e:	df 92       	push	r13
 170:	ef 92       	push	r14
 172:	ff 92       	push	r15
 174:	0f 93       	push	r16
 176:	1f 93       	push	r17
 178:	cf 93       	push	r28
 17a:	df 93       	push	r29
 17c:	1f 92       	push	r1
 17e:	cd b7       	in	r28, 0x3d	; 61
 180:	de b7       	in	r29, 0x3e	; 62
 182:	89 83       	std	Y+1, r24	; 0x01
 184:	89 81       	ldd	r24, Y+1	; 0x01
 186:	85 36       	cpi	r24, 0x65	; 101
 188:	10 f0       	brcs	.+4      	; 0x18e <initPWM+0x2a>
 18a:	84 e6       	ldi	r24, 0x64	; 100
 18c:	89 83       	std	Y+1, r24	; 0x01
 18e:	80 e8       	ldi	r24, 0x80	; 128
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	22 e2       	ldi	r18, 0x22	; 34
 194:	fc 01       	movw	r30, r24
 196:	20 83       	st	Z, r18
 198:	81 e8       	ldi	r24, 0x81	; 129
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	28 e0       	ldi	r18, 0x08	; 8
 19e:	fc 01       	movw	r30, r24
 1a0:	20 83       	st	Z, r18
 1a2:	84 e8       	ldi	r24, 0x84	; 132
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	fc 01       	movw	r30, r24
 1a8:	11 82       	std	Z+1, r1	; 0x01
 1aa:	10 82       	st	Z, r1
 1ac:	0f 2e       	mov	r0, r31
 1ae:	fa e8       	ldi	r31, 0x8A	; 138
 1b0:	8f 2e       	mov	r8, r31
 1b2:	91 2c       	mov	r9, r1
 1b4:	f0 2d       	mov	r31, r0
 1b6:	89 81       	ldd	r24, Y+1	; 0x01
 1b8:	88 2f       	mov	r24, r24
 1ba:	90 e0       	ldi	r25, 0x00	; 0
 1bc:	a0 e0       	ldi	r26, 0x00	; 0
 1be:	b0 e0       	ldi	r27, 0x00	; 0
 1c0:	1f 92       	push	r1
 1c2:	1f 92       	push	r1
 1c4:	21 e0       	ldi	r18, 0x01	; 1
 1c6:	2f 93       	push	r18
 1c8:	2f ef       	ldi	r18, 0xFF	; 255
 1ca:	2f 93       	push	r18
 1cc:	a1 2c       	mov	r10, r1
 1ce:	b1 2c       	mov	r11, r1
 1d0:	65 01       	movw	r12, r10
 1d2:	14 e6       	ldi	r17, 0x64	; 100
 1d4:	e1 2e       	mov	r14, r17
 1d6:	f1 2c       	mov	r15, r1
 1d8:	00 e0       	ldi	r16, 0x00	; 0
 1da:	10 e0       	ldi	r17, 0x00	; 0
 1dc:	20 e0       	ldi	r18, 0x00	; 0
 1de:	30 e0       	ldi	r19, 0x00	; 0
 1e0:	a9 01       	movw	r20, r18
 1e2:	bc 01       	movw	r22, r24
 1e4:	cd 01       	movw	r24, r26
 1e6:	0e 94 22 01 	call	0x244	; 0x244 <Map>
 1ea:	0f 90       	pop	r0
 1ec:	0f 90       	pop	r0
 1ee:	0f 90       	pop	r0
 1f0:	0f 90       	pop	r0
 1f2:	dc 01       	movw	r26, r24
 1f4:	cb 01       	movw	r24, r22
 1f6:	f4 01       	movw	r30, r8
 1f8:	91 83       	std	Z+1, r25	; 0x01
 1fa:	80 83       	st	Z, r24
 1fc:	8f e6       	ldi	r24, 0x6F	; 111
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	fc 01       	movw	r30, r24
 202:	10 82       	st	Z, r1
 204:	00 00       	nop
 206:	0f 90       	pop	r0
 208:	df 91       	pop	r29
 20a:	cf 91       	pop	r28
 20c:	1f 91       	pop	r17
 20e:	0f 91       	pop	r16
 210:	ff 90       	pop	r15
 212:	ef 90       	pop	r14
 214:	df 90       	pop	r13
 216:	cf 90       	pop	r12
 218:	bf 90       	pop	r11
 21a:	af 90       	pop	r10
 21c:	9f 90       	pop	r9
 21e:	8f 90       	pop	r8
 220:	08 95       	ret

00000222 <startPWM>:
 222:	cf 93       	push	r28
 224:	df 93       	push	r29
 226:	cd b7       	in	r28, 0x3d	; 61
 228:	de b7       	in	r29, 0x3e	; 62
 22a:	81 e8       	ldi	r24, 0x81	; 129
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	21 e8       	ldi	r18, 0x81	; 129
 230:	30 e0       	ldi	r19, 0x00	; 0
 232:	f9 01       	movw	r30, r18
 234:	20 81       	ld	r18, Z
 236:	21 60       	ori	r18, 0x01	; 1
 238:	fc 01       	movw	r30, r24
 23a:	20 83       	st	Z, r18
 23c:	00 00       	nop
 23e:	df 91       	pop	r29
 240:	cf 91       	pop	r28
 242:	08 95       	ret

00000244 <Map>:
 * @param [in] OutMin: minimal value of output range
 * @param [in] OutMax: maximal value of output range
 * @return data in new number range
 *****************************************************************************/
int32_t Map(int32_t lData, int32_t InMin, int32_t InMax, int32_t OutMin, int32_t OutMax)
{
 244:	af 92       	push	r10
 246:	bf 92       	push	r11
 248:	cf 92       	push	r12
 24a:	df 92       	push	r13
 24c:	ef 92       	push	r14
 24e:	ff 92       	push	r15
 250:	0f 93       	push	r16
 252:	1f 93       	push	r17
 254:	cf 93       	push	r28
 256:	df 93       	push	r29
 258:	cd b7       	in	r28, 0x3d	; 61
 25a:	de b7       	in	r29, 0x3e	; 62
 25c:	60 97       	sbiw	r28, 0x10	; 16
 25e:	0f b6       	in	r0, 0x3f	; 63
 260:	f8 94       	cli
 262:	de bf       	out	0x3e, r29	; 62
 264:	0f be       	out	0x3f, r0	; 63
 266:	cd bf       	out	0x3d, r28	; 61
 268:	69 83       	std	Y+1, r22	; 0x01
 26a:	7a 83       	std	Y+2, r23	; 0x02
 26c:	8b 83       	std	Y+3, r24	; 0x03
 26e:	9c 83       	std	Y+4, r25	; 0x04
 270:	2d 83       	std	Y+5, r18	; 0x05
 272:	3e 83       	std	Y+6, r19	; 0x06
 274:	4f 83       	std	Y+7, r20	; 0x07
 276:	58 87       	std	Y+8, r21	; 0x08
 278:	e9 86       	std	Y+9, r14	; 0x09
 27a:	fa 86       	std	Y+10, r15	; 0x0a
 27c:	0b 87       	std	Y+11, r16	; 0x0b
 27e:	1c 87       	std	Y+12, r17	; 0x0c
 280:	ad 86       	std	Y+13, r10	; 0x0d
 282:	be 86       	std	Y+14, r11	; 0x0e
 284:	cf 86       	std	Y+15, r12	; 0x0f
 286:	d8 8a       	std	Y+16, r13	; 0x10
	return((lData-InMin)*(OutMax-OutMin)/(InMax-InMin)+OutMin);
 288:	29 81       	ldd	r18, Y+1	; 0x01
 28a:	3a 81       	ldd	r19, Y+2	; 0x02
 28c:	4b 81       	ldd	r20, Y+3	; 0x03
 28e:	5c 81       	ldd	r21, Y+4	; 0x04
 290:	8d 81       	ldd	r24, Y+5	; 0x05
 292:	9e 81       	ldd	r25, Y+6	; 0x06
 294:	af 81       	ldd	r26, Y+7	; 0x07
 296:	b8 85       	ldd	r27, Y+8	; 0x08
 298:	79 01       	movw	r14, r18
 29a:	8a 01       	movw	r16, r20
 29c:	e8 1a       	sub	r14, r24
 29e:	f9 0a       	sbc	r15, r25
 2a0:	0a 0b       	sbc	r16, r26
 2a2:	1b 0b       	sbc	r17, r27
 2a4:	2d 8d       	ldd	r18, Y+29	; 0x1d
 2a6:	3e 8d       	ldd	r19, Y+30	; 0x1e
 2a8:	4f 8d       	ldd	r20, Y+31	; 0x1f
 2aa:	58 a1       	ldd	r21, Y+32	; 0x20
 2ac:	8d 85       	ldd	r24, Y+13	; 0x0d
 2ae:	9e 85       	ldd	r25, Y+14	; 0x0e
 2b0:	af 85       	ldd	r26, Y+15	; 0x0f
 2b2:	b8 89       	ldd	r27, Y+16	; 0x10
 2b4:	59 01       	movw	r10, r18
 2b6:	6a 01       	movw	r12, r20
 2b8:	a8 1a       	sub	r10, r24
 2ba:	b9 0a       	sbc	r11, r25
 2bc:	ca 0a       	sbc	r12, r26
 2be:	db 0a       	sbc	r13, r27
 2c0:	d6 01       	movw	r26, r12
 2c2:	c5 01       	movw	r24, r10
 2c4:	a8 01       	movw	r20, r16
 2c6:	97 01       	movw	r18, r14
 2c8:	bc 01       	movw	r22, r24
 2ca:	cd 01       	movw	r24, r26
 2cc:	0e 94 99 01 	call	0x332	; 0x332 <__mulsi3>
 2d0:	7b 01       	movw	r14, r22
 2d2:	8c 01       	movw	r16, r24
 2d4:	29 85       	ldd	r18, Y+9	; 0x09
 2d6:	3a 85       	ldd	r19, Y+10	; 0x0a
 2d8:	4b 85       	ldd	r20, Y+11	; 0x0b
 2da:	5c 85       	ldd	r21, Y+12	; 0x0c
 2dc:	8d 81       	ldd	r24, Y+5	; 0x05
 2de:	9e 81       	ldd	r25, Y+6	; 0x06
 2e0:	af 81       	ldd	r26, Y+7	; 0x07
 2e2:	b8 85       	ldd	r27, Y+8	; 0x08
 2e4:	28 1b       	sub	r18, r24
 2e6:	39 0b       	sbc	r19, r25
 2e8:	4a 0b       	sbc	r20, r26
 2ea:	5b 0b       	sbc	r21, r27
 2ec:	c8 01       	movw	r24, r16
 2ee:	b7 01       	movw	r22, r14
 2f0:	0e 94 a9 01 	call	0x352	; 0x352 <__divmodsi4>
 2f4:	da 01       	movw	r26, r20
 2f6:	c9 01       	movw	r24, r18
 2f8:	9c 01       	movw	r18, r24
 2fa:	ad 01       	movw	r20, r26
 2fc:	8d 85       	ldd	r24, Y+13	; 0x0d
 2fe:	9e 85       	ldd	r25, Y+14	; 0x0e
 300:	af 85       	ldd	r26, Y+15	; 0x0f
 302:	b8 89       	ldd	r27, Y+16	; 0x10
 304:	82 0f       	add	r24, r18
 306:	93 1f       	adc	r25, r19
 308:	a4 1f       	adc	r26, r20
 30a:	b5 1f       	adc	r27, r21
}
 30c:	bc 01       	movw	r22, r24
 30e:	cd 01       	movw	r24, r26
 310:	60 96       	adiw	r28, 0x10	; 16
 312:	0f b6       	in	r0, 0x3f	; 63
 314:	f8 94       	cli
 316:	de bf       	out	0x3e, r29	; 62
 318:	0f be       	out	0x3f, r0	; 63
 31a:	cd bf       	out	0x3d, r28	; 61
 31c:	df 91       	pop	r29
 31e:	cf 91       	pop	r28
 320:	1f 91       	pop	r17
 322:	0f 91       	pop	r16
 324:	ff 90       	pop	r15
 326:	ef 90       	pop	r14
 328:	df 90       	pop	r13
 32a:	cf 90       	pop	r12
 32c:	bf 90       	pop	r11
 32e:	af 90       	pop	r10
 330:	08 95       	ret

00000332 <__mulsi3>:
 332:	db 01       	movw	r26, r22
 334:	8f 93       	push	r24
 336:	9f 93       	push	r25
 338:	0e 94 c8 01 	call	0x390	; 0x390 <__muluhisi3>
 33c:	bf 91       	pop	r27
 33e:	af 91       	pop	r26
 340:	a2 9f       	mul	r26, r18
 342:	80 0d       	add	r24, r0
 344:	91 1d       	adc	r25, r1
 346:	a3 9f       	mul	r26, r19
 348:	90 0d       	add	r25, r0
 34a:	b2 9f       	mul	r27, r18
 34c:	90 0d       	add	r25, r0
 34e:	11 24       	eor	r1, r1
 350:	08 95       	ret

00000352 <__divmodsi4>:
 352:	05 2e       	mov	r0, r21
 354:	97 fb       	bst	r25, 7
 356:	1e f4       	brtc	.+6      	; 0x35e <__divmodsi4+0xc>
 358:	00 94       	com	r0
 35a:	0e 94 c0 01 	call	0x380	; 0x380 <__negsi2>
 35e:	57 fd       	sbrc	r21, 7
 360:	07 d0       	rcall	.+14     	; 0x370 <__divmodsi4_neg2>
 362:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <__udivmodsi4>
 366:	07 fc       	sbrc	r0, 7
 368:	03 d0       	rcall	.+6      	; 0x370 <__divmodsi4_neg2>
 36a:	4e f4       	brtc	.+18     	; 0x37e <__divmodsi4_exit>
 36c:	0c 94 c0 01 	jmp	0x380	; 0x380 <__negsi2>

00000370 <__divmodsi4_neg2>:
 370:	50 95       	com	r21
 372:	40 95       	com	r20
 374:	30 95       	com	r19
 376:	21 95       	neg	r18
 378:	3f 4f       	sbci	r19, 0xFF	; 255
 37a:	4f 4f       	sbci	r20, 0xFF	; 255
 37c:	5f 4f       	sbci	r21, 0xFF	; 255

0000037e <__divmodsi4_exit>:
 37e:	08 95       	ret

00000380 <__negsi2>:
 380:	90 95       	com	r25
 382:	80 95       	com	r24
 384:	70 95       	com	r23
 386:	61 95       	neg	r22
 388:	7f 4f       	sbci	r23, 0xFF	; 255
 38a:	8f 4f       	sbci	r24, 0xFF	; 255
 38c:	9f 4f       	sbci	r25, 0xFF	; 255
 38e:	08 95       	ret

00000390 <__muluhisi3>:
 390:	0e 94 f5 01 	call	0x3ea	; 0x3ea <__umulhisi3>
 394:	a5 9f       	mul	r26, r21
 396:	90 0d       	add	r25, r0
 398:	b4 9f       	mul	r27, r20
 39a:	90 0d       	add	r25, r0
 39c:	a4 9f       	mul	r26, r20
 39e:	80 0d       	add	r24, r0
 3a0:	91 1d       	adc	r25, r1
 3a2:	11 24       	eor	r1, r1
 3a4:	08 95       	ret

000003a6 <__udivmodsi4>:
 3a6:	a1 e2       	ldi	r26, 0x21	; 33
 3a8:	1a 2e       	mov	r1, r26
 3aa:	aa 1b       	sub	r26, r26
 3ac:	bb 1b       	sub	r27, r27
 3ae:	fd 01       	movw	r30, r26
 3b0:	0d c0       	rjmp	.+26     	; 0x3cc <__udivmodsi4_ep>

000003b2 <__udivmodsi4_loop>:
 3b2:	aa 1f       	adc	r26, r26
 3b4:	bb 1f       	adc	r27, r27
 3b6:	ee 1f       	adc	r30, r30
 3b8:	ff 1f       	adc	r31, r31
 3ba:	a2 17       	cp	r26, r18
 3bc:	b3 07       	cpc	r27, r19
 3be:	e4 07       	cpc	r30, r20
 3c0:	f5 07       	cpc	r31, r21
 3c2:	20 f0       	brcs	.+8      	; 0x3cc <__udivmodsi4_ep>
 3c4:	a2 1b       	sub	r26, r18
 3c6:	b3 0b       	sbc	r27, r19
 3c8:	e4 0b       	sbc	r30, r20
 3ca:	f5 0b       	sbc	r31, r21

000003cc <__udivmodsi4_ep>:
 3cc:	66 1f       	adc	r22, r22
 3ce:	77 1f       	adc	r23, r23
 3d0:	88 1f       	adc	r24, r24
 3d2:	99 1f       	adc	r25, r25
 3d4:	1a 94       	dec	r1
 3d6:	69 f7       	brne	.-38     	; 0x3b2 <__udivmodsi4_loop>
 3d8:	60 95       	com	r22
 3da:	70 95       	com	r23
 3dc:	80 95       	com	r24
 3de:	90 95       	com	r25
 3e0:	9b 01       	movw	r18, r22
 3e2:	ac 01       	movw	r20, r24
 3e4:	bd 01       	movw	r22, r26
 3e6:	cf 01       	movw	r24, r30
 3e8:	08 95       	ret

000003ea <__umulhisi3>:
 3ea:	a2 9f       	mul	r26, r18
 3ec:	b0 01       	movw	r22, r0
 3ee:	b3 9f       	mul	r27, r19
 3f0:	c0 01       	movw	r24, r0
 3f2:	a3 9f       	mul	r26, r19
 3f4:	70 0d       	add	r23, r0
 3f6:	81 1d       	adc	r24, r1
 3f8:	11 24       	eor	r1, r1
 3fa:	91 1d       	adc	r25, r1
 3fc:	b2 9f       	mul	r27, r18
 3fe:	70 0d       	add	r23, r0
 400:	81 1d       	adc	r24, r1
 402:	11 24       	eor	r1, r1
 404:	91 1d       	adc	r25, r1
 406:	08 95       	ret

00000408 <_exit>:
 408:	f8 94       	cli

0000040a <__stop_program>:
 40a:	ff cf       	rjmp	.-2      	; 0x40a <__stop_program>
