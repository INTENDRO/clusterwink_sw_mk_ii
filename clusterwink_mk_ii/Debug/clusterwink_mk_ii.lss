
clusterwink_mk_ii.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000005d2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000057e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000005d2  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000604  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000e0  00000000  00000000  00000644  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b27  00000000  00000000  00000724  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008bc  00000000  00000000  0000124b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000067f  00000000  00000000  00001b07  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000378  00000000  00000000  00002188  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004dd  00000000  00000000  00002500  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000006ea  00000000  00000000  000029dd  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000b0  00000000  00000000  000030c7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
   8:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
   c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  10:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  14:	0c 94 65 00 	jmp	0xca	; 0xca <__vector_5>
  18:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  1c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  20:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  24:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  28:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  2c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  30:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  34:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  38:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  3c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  40:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  44:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  48:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  4c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__vector_19>
  50:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  54:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  58:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  5c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  60:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  64:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  68:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  6c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  70:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  74:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  78:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d8 e0       	ldi	r29, 0x08	; 8
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_clear_bss>:
  88:	21 e0       	ldi	r18, 0x01	; 1
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	01 c0       	rjmp	.+2      	; 0x92 <.do_clear_bss_start>

00000090 <.do_clear_bss_loop>:
  90:	1d 92       	st	X+, r1

00000092 <.do_clear_bss_start>:
  92:	a0 30       	cpi	r26, 0x00	; 0
  94:	b2 07       	cpc	r27, r18
  96:	e1 f7       	brne	.-8      	; 0x90 <.do_clear_bss_loop>
  98:	0e 94 9c 00 	call	0x138	; 0x138 <main>
  9c:	0c 94 bd 02 	jmp	0x57a	; 0x57a <_exit>

000000a0 <__bad_interrupt>:
  a0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a4 <__vector_19>:

static RingBuff_t RINGBUFFER;


ISR(SPI_STC_vect)
{
  a4:	1f 92       	push	r1
  a6:	0f 92       	push	r0
  a8:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
  ac:	0f 92       	push	r0
  ae:	11 24       	eor	r1, r1
  b0:	cf 93       	push	r28
  b2:	df 93       	push	r29
  b4:	cd b7       	in	r28, 0x3d	; 61
  b6:	de b7       	in	r29, 0x3e	; 62
	
}
  b8:	00 00       	nop
  ba:	df 91       	pop	r29
  bc:	cf 91       	pop	r28
  be:	0f 90       	pop	r0
  c0:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
  c4:	0f 90       	pop	r0
  c6:	1f 90       	pop	r1
  c8:	18 95       	reti

000000ca <__vector_5>:

ISR(PCINT1_vect)
{
  ca:	1f 92       	push	r1
  cc:	0f 92       	push	r0
  ce:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
  d2:	0f 92       	push	r0
  d4:	11 24       	eor	r1, r1
  d6:	2f 93       	push	r18
  d8:	3f 93       	push	r19
  da:	4f 93       	push	r20
  dc:	5f 93       	push	r21
  de:	6f 93       	push	r22
  e0:	7f 93       	push	r23
  e2:	8f 93       	push	r24
  e4:	9f 93       	push	r25
  e6:	af 93       	push	r26
  e8:	bf 93       	push	r27
  ea:	ef 93       	push	r30
  ec:	ff 93       	push	r31
  ee:	cf 93       	push	r28
  f0:	df 93       	push	r29
  f2:	cd b7       	in	r28, 0x3d	; 61
  f4:	de b7       	in	r29, 0x3e	; 62
	if(PIN_SPI & (1<<SPI_SS))
  f6:	83 e2       	ldi	r24, 0x23	; 35
  f8:	90 e0       	ldi	r25, 0x00	; 0
  fa:	fc 01       	movw	r30, r24
  fc:	80 81       	ld	r24, Z
  fe:	88 2f       	mov	r24, r24
 100:	90 e0       	ldi	r25, 0x00	; 0
 102:	80 71       	andi	r24, 0x10	; 16
 104:	99 27       	eor	r25, r25
 106:	89 2b       	or	r24, r25
 108:	11 f0       	breq	.+4      	; 0x10e <__vector_5+0x44>
	{
		enablePLED();
 10a:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <enablePLED>
	}
	
}
 10e:	00 00       	nop
 110:	df 91       	pop	r29
 112:	cf 91       	pop	r28
 114:	ff 91       	pop	r31
 116:	ef 91       	pop	r30
 118:	bf 91       	pop	r27
 11a:	af 91       	pop	r26
 11c:	9f 91       	pop	r25
 11e:	8f 91       	pop	r24
 120:	7f 91       	pop	r23
 122:	6f 91       	pop	r22
 124:	5f 91       	pop	r21
 126:	4f 91       	pop	r20
 128:	3f 91       	pop	r19
 12a:	2f 91       	pop	r18
 12c:	0f 90       	pop	r0
 12e:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 132:	0f 90       	pop	r0
 134:	1f 90       	pop	r1
 136:	18 95       	reti

00000138 <main>:


int main(void)
{
 138:	cf 93       	push	r28
 13a:	df 93       	push	r29
 13c:	1f 92       	push	r1
 13e:	cd b7       	in	r28, 0x3d	; 61
 140:	de b7       	in	r29, 0x3e	; 62
    uint8_t u8Duty = 0;
 142:	19 82       	std	Y+1, r1	; 0x01
	uint16_t i;
	
	portInit();
 144:	0e 94 cc 00 	call	0x198	; 0x198 <portInit>
	initPWM(1);
 148:	81 e0       	ldi	r24, 0x01	; 1
 14a:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <initPWM>
	startPWM();
 14e:	0e 94 ca 01 	call	0x394	; 0x394 <startPWM>
	//spiSlaveInit();
	spiPcInt();
 152:	0e 94 ad 00 	call	0x15a	; 0x15a <spiPcInt>

	
	
	sei();
 156:	78 94       	sei
	
	
    while (1) 
    {

    }
 158:	ff cf       	rjmp	.-2      	; 0x158 <main+0x20>

0000015a <spiPcInt>:
 * 
 * @param [void] no input
 * @return no return value
 *****************************************************************************/
void spiPcInt(void)
{
 15a:	cf 93       	push	r28
 15c:	df 93       	push	r29
 15e:	cd b7       	in	r28, 0x3d	; 61
 160:	de b7       	in	r29, 0x3e	; 62
	PCICR |= (1<<PCIE1);
 162:	88 e6       	ldi	r24, 0x68	; 104
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	28 e6       	ldi	r18, 0x68	; 104
 168:	30 e0       	ldi	r19, 0x00	; 0
 16a:	f9 01       	movw	r30, r18
 16c:	20 81       	ld	r18, Z
 16e:	22 60       	ori	r18, 0x02	; 2
 170:	fc 01       	movw	r30, r24
 172:	20 83       	st	Z, r18
	PCIFR = (1<<PCIF1);
 174:	8b e3       	ldi	r24, 0x3B	; 59
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	22 e0       	ldi	r18, 0x02	; 2
 17a:	fc 01       	movw	r30, r24
 17c:	20 83       	st	Z, r18
	PCMSK1 |= (1<<PCINT12);
 17e:	8c e6       	ldi	r24, 0x6C	; 108
 180:	90 e0       	ldi	r25, 0x00	; 0
 182:	2c e6       	ldi	r18, 0x6C	; 108
 184:	30 e0       	ldi	r19, 0x00	; 0
 186:	f9 01       	movw	r30, r18
 188:	20 81       	ld	r18, Z
 18a:	20 61       	ori	r18, 0x10	; 16
 18c:	fc 01       	movw	r30, r24
 18e:	20 83       	st	Z, r18
 190:	00 00       	nop
 192:	df 91       	pop	r29
 194:	cf 91       	pop	r28
 196:	08 95       	ret

00000198 <portInit>:
	{
		while(!(TIFR0&(1<<OCF0A)));	// poll flag
		TIFR0 =  (1<<OCF0A);		// clear flag
	}
	TCCR0B &= ~(0x07);	// set prescaler to 0 (stop timer)
}
 198:	cf 93       	push	r28
 19a:	df 93       	push	r29
 19c:	cd b7       	in	r28, 0x3d	; 61
 19e:	de b7       	in	r29, 0x3e	; 62
 1a0:	8a e2       	ldi	r24, 0x2A	; 42
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	2a e2       	ldi	r18, 0x2A	; 42
 1a6:	30 e0       	ldi	r19, 0x00	; 0
 1a8:	f9 01       	movw	r30, r18
 1aa:	20 81       	ld	r18, Z
 1ac:	20 63       	ori	r18, 0x30	; 48
 1ae:	fc 01       	movw	r30, r24
 1b0:	20 83       	st	Z, r18
 1b2:	8b e2       	ldi	r24, 0x2B	; 43
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	2b e2       	ldi	r18, 0x2B	; 43
 1b8:	30 e0       	ldi	r19, 0x00	; 0
 1ba:	f9 01       	movw	r30, r18
 1bc:	20 81       	ld	r18, Z
 1be:	20 62       	ori	r18, 0x20	; 32
 1c0:	fc 01       	movw	r30, r24
 1c2:	20 83       	st	Z, r18
 1c4:	8b e2       	ldi	r24, 0x2B	; 43
 1c6:	90 e0       	ldi	r25, 0x00	; 0
 1c8:	2b e2       	ldi	r18, 0x2B	; 43
 1ca:	30 e0       	ldi	r19, 0x00	; 0
 1cc:	f9 01       	movw	r30, r18
 1ce:	20 81       	ld	r18, Z
 1d0:	2f 7e       	andi	r18, 0xEF	; 239
 1d2:	fc 01       	movw	r30, r24
 1d4:	20 83       	st	Z, r18
 1d6:	8a e2       	ldi	r24, 0x2A	; 42
 1d8:	90 e0       	ldi	r25, 0x00	; 0
 1da:	2a e2       	ldi	r18, 0x2A	; 42
 1dc:	30 e0       	ldi	r19, 0x00	; 0
 1de:	f9 01       	movw	r30, r18
 1e0:	20 81       	ld	r18, Z
 1e2:	20 68       	ori	r18, 0x80	; 128
 1e4:	fc 01       	movw	r30, r24
 1e6:	20 83       	st	Z, r18
 1e8:	8b e2       	ldi	r24, 0x2B	; 43
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	2b e2       	ldi	r18, 0x2B	; 43
 1ee:	30 e0       	ldi	r19, 0x00	; 0
 1f0:	f9 01       	movw	r30, r18
 1f2:	20 81       	ld	r18, Z
 1f4:	20 68       	ori	r18, 0x80	; 128
 1f6:	fc 01       	movw	r30, r24
 1f8:	20 83       	st	Z, r18
 1fa:	8a e2       	ldi	r24, 0x2A	; 42
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	2a e2       	ldi	r18, 0x2A	; 42
 200:	30 e0       	ldi	r19, 0x00	; 0
 202:	f9 01       	movw	r30, r18
 204:	20 81       	ld	r18, Z
 206:	2f 7b       	andi	r18, 0xBF	; 191
 208:	fc 01       	movw	r30, r24
 20a:	20 83       	st	Z, r18
 20c:	8a e2       	ldi	r24, 0x2A	; 42
 20e:	90 e0       	ldi	r25, 0x00	; 0
 210:	2a e2       	ldi	r18, 0x2A	; 42
 212:	30 e0       	ldi	r19, 0x00	; 0
 214:	f9 01       	movw	r30, r18
 216:	20 81       	ld	r18, Z
 218:	2c 7f       	andi	r18, 0xFC	; 252
 21a:	fc 01       	movw	r30, r24
 21c:	20 83       	st	Z, r18
 21e:	8b e2       	ldi	r24, 0x2B	; 43
 220:	90 e0       	ldi	r25, 0x00	; 0
 222:	2b e2       	ldi	r18, 0x2B	; 43
 224:	30 e0       	ldi	r19, 0x00	; 0
 226:	f9 01       	movw	r30, r18
 228:	20 81       	ld	r18, Z
 22a:	21 60       	ori	r18, 0x01	; 1
 22c:	fc 01       	movw	r30, r24
 22e:	20 83       	st	Z, r18
 230:	81 e2       	ldi	r24, 0x21	; 33
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	21 e2       	ldi	r18, 0x21	; 33
 236:	30 e0       	ldi	r19, 0x00	; 0
 238:	f9 01       	movw	r30, r18
 23a:	20 81       	ld	r18, Z
 23c:	2e 7f       	andi	r18, 0xFE	; 254
 23e:	fc 01       	movw	r30, r24
 240:	20 83       	st	Z, r18
 242:	82 e2       	ldi	r24, 0x22	; 34
 244:	90 e0       	ldi	r25, 0x00	; 0
 246:	22 e2       	ldi	r18, 0x22	; 34
 248:	30 e0       	ldi	r19, 0x00	; 0
 24a:	f9 01       	movw	r30, r18
 24c:	20 81       	ld	r18, Z
 24e:	2e 7f       	andi	r18, 0xFE	; 254
 250:	fc 01       	movw	r30, r24
 252:	20 83       	st	Z, r18
 254:	8e e7       	ldi	r24, 0x7E	; 126
 256:	90 e0       	ldi	r25, 0x00	; 0
 258:	2e e7       	ldi	r18, 0x7E	; 126
 25a:	30 e0       	ldi	r19, 0x00	; 0
 25c:	f9 01       	movw	r30, r18
 25e:	20 81       	ld	r18, Z
 260:	21 60       	ori	r18, 0x01	; 1
 262:	fc 01       	movw	r30, r24
 264:	20 83       	st	Z, r18
 266:	81 e2       	ldi	r24, 0x21	; 33
 268:	90 e0       	ldi	r25, 0x00	; 0
 26a:	21 e2       	ldi	r18, 0x21	; 33
 26c:	30 e0       	ldi	r19, 0x00	; 0
 26e:	f9 01       	movw	r30, r18
 270:	20 81       	ld	r18, Z
 272:	21 7f       	andi	r18, 0xF1	; 241
 274:	fc 01       	movw	r30, r24
 276:	20 83       	st	Z, r18
 278:	82 e2       	ldi	r24, 0x22	; 34
 27a:	90 e0       	ldi	r25, 0x00	; 0
 27c:	22 e2       	ldi	r18, 0x22	; 34
 27e:	30 e0       	ldi	r19, 0x00	; 0
 280:	f9 01       	movw	r30, r18
 282:	20 81       	ld	r18, Z
 284:	2e 60       	ori	r18, 0x0E	; 14
 286:	fc 01       	movw	r30, r24
 288:	20 83       	st	Z, r18
 28a:	87 e2       	ldi	r24, 0x27	; 39
 28c:	90 e0       	ldi	r25, 0x00	; 0
 28e:	fc 01       	movw	r30, r24
 290:	80 81       	ld	r24, Z
 292:	87 e2       	ldi	r24, 0x27	; 39
 294:	90 e0       	ldi	r25, 0x00	; 0
 296:	fc 01       	movw	r30, r24
 298:	10 82       	st	Z, r1
 29a:	88 e2       	ldi	r24, 0x28	; 40
 29c:	90 e0       	ldi	r25, 0x00	; 0
 29e:	fc 01       	movw	r30, r24
 2a0:	80 81       	ld	r24, Z
 2a2:	88 e2       	ldi	r24, 0x28	; 40
 2a4:	90 e0       	ldi	r25, 0x00	; 0
 2a6:	2f ef       	ldi	r18, 0xFF	; 255
 2a8:	fc 01       	movw	r30, r24
 2aa:	20 83       	st	Z, r18
 2ac:	00 00       	nop
 2ae:	df 91       	pop	r29
 2b0:	cf 91       	pop	r28
 2b2:	08 95       	ret

000002b4 <enablePLED>:
 2b4:	cf 93       	push	r28
 2b6:	df 93       	push	r29
 2b8:	cd b7       	in	r28, 0x3d	; 61
 2ba:	de b7       	in	r29, 0x3e	; 62
 2bc:	8b e2       	ldi	r24, 0x2B	; 43
 2be:	90 e0       	ldi	r25, 0x00	; 0
 2c0:	2b e2       	ldi	r18, 0x2B	; 43
 2c2:	30 e0       	ldi	r19, 0x00	; 0
 2c4:	f9 01       	movw	r30, r18
 2c6:	20 81       	ld	r18, Z
 2c8:	2f 7d       	andi	r18, 0xDF	; 223
 2ca:	fc 01       	movw	r30, r24
 2cc:	20 83       	st	Z, r18
 2ce:	00 00       	nop
 2d0:	df 91       	pop	r29
 2d2:	cf 91       	pop	r28
 2d4:	08 95       	ret

000002d6 <initPWM>:
 2d6:	8f 92       	push	r8
 2d8:	9f 92       	push	r9
 2da:	af 92       	push	r10
 2dc:	bf 92       	push	r11
 2de:	cf 92       	push	r12
 2e0:	df 92       	push	r13
 2e2:	ef 92       	push	r14
 2e4:	ff 92       	push	r15
 2e6:	0f 93       	push	r16
 2e8:	1f 93       	push	r17
 2ea:	cf 93       	push	r28
 2ec:	df 93       	push	r29
 2ee:	1f 92       	push	r1
 2f0:	cd b7       	in	r28, 0x3d	; 61
 2f2:	de b7       	in	r29, 0x3e	; 62
 2f4:	89 83       	std	Y+1, r24	; 0x01
 2f6:	89 81       	ldd	r24, Y+1	; 0x01
 2f8:	85 36       	cpi	r24, 0x65	; 101
 2fa:	10 f0       	brcs	.+4      	; 0x300 <initPWM+0x2a>
 2fc:	84 e6       	ldi	r24, 0x64	; 100
 2fe:	89 83       	std	Y+1, r24	; 0x01
 300:	80 e8       	ldi	r24, 0x80	; 128
 302:	90 e0       	ldi	r25, 0x00	; 0
 304:	22 e2       	ldi	r18, 0x22	; 34
 306:	fc 01       	movw	r30, r24
 308:	20 83       	st	Z, r18
 30a:	81 e8       	ldi	r24, 0x81	; 129
 30c:	90 e0       	ldi	r25, 0x00	; 0
 30e:	28 e0       	ldi	r18, 0x08	; 8
 310:	fc 01       	movw	r30, r24
 312:	20 83       	st	Z, r18
 314:	84 e8       	ldi	r24, 0x84	; 132
 316:	90 e0       	ldi	r25, 0x00	; 0
 318:	fc 01       	movw	r30, r24
 31a:	11 82       	std	Z+1, r1	; 0x01
 31c:	10 82       	st	Z, r1
 31e:	0f 2e       	mov	r0, r31
 320:	fa e8       	ldi	r31, 0x8A	; 138
 322:	8f 2e       	mov	r8, r31
 324:	91 2c       	mov	r9, r1
 326:	f0 2d       	mov	r31, r0
 328:	89 81       	ldd	r24, Y+1	; 0x01
 32a:	88 2f       	mov	r24, r24
 32c:	90 e0       	ldi	r25, 0x00	; 0
 32e:	a0 e0       	ldi	r26, 0x00	; 0
 330:	b0 e0       	ldi	r27, 0x00	; 0
 332:	1f 92       	push	r1
 334:	1f 92       	push	r1
 336:	21 e0       	ldi	r18, 0x01	; 1
 338:	2f 93       	push	r18
 33a:	2f ef       	ldi	r18, 0xFF	; 255
 33c:	2f 93       	push	r18
 33e:	a1 2c       	mov	r10, r1
 340:	b1 2c       	mov	r11, r1
 342:	65 01       	movw	r12, r10
 344:	14 e6       	ldi	r17, 0x64	; 100
 346:	e1 2e       	mov	r14, r17
 348:	f1 2c       	mov	r15, r1
 34a:	00 e0       	ldi	r16, 0x00	; 0
 34c:	10 e0       	ldi	r17, 0x00	; 0
 34e:	20 e0       	ldi	r18, 0x00	; 0
 350:	30 e0       	ldi	r19, 0x00	; 0
 352:	a9 01       	movw	r20, r18
 354:	bc 01       	movw	r22, r24
 356:	cd 01       	movw	r24, r26
 358:	0e 94 db 01 	call	0x3b6	; 0x3b6 <Map>
 35c:	0f 90       	pop	r0
 35e:	0f 90       	pop	r0
 360:	0f 90       	pop	r0
 362:	0f 90       	pop	r0
 364:	dc 01       	movw	r26, r24
 366:	cb 01       	movw	r24, r22
 368:	f4 01       	movw	r30, r8
 36a:	91 83       	std	Z+1, r25	; 0x01
 36c:	80 83       	st	Z, r24
 36e:	8f e6       	ldi	r24, 0x6F	; 111
 370:	90 e0       	ldi	r25, 0x00	; 0
 372:	fc 01       	movw	r30, r24
 374:	10 82       	st	Z, r1
 376:	00 00       	nop
 378:	0f 90       	pop	r0
 37a:	df 91       	pop	r29
 37c:	cf 91       	pop	r28
 37e:	1f 91       	pop	r17
 380:	0f 91       	pop	r16
 382:	ff 90       	pop	r15
 384:	ef 90       	pop	r14
 386:	df 90       	pop	r13
 388:	cf 90       	pop	r12
 38a:	bf 90       	pop	r11
 38c:	af 90       	pop	r10
 38e:	9f 90       	pop	r9
 390:	8f 90       	pop	r8
 392:	08 95       	ret

00000394 <startPWM>:
 394:	cf 93       	push	r28
 396:	df 93       	push	r29
 398:	cd b7       	in	r28, 0x3d	; 61
 39a:	de b7       	in	r29, 0x3e	; 62
 39c:	81 e8       	ldi	r24, 0x81	; 129
 39e:	90 e0       	ldi	r25, 0x00	; 0
 3a0:	21 e8       	ldi	r18, 0x81	; 129
 3a2:	30 e0       	ldi	r19, 0x00	; 0
 3a4:	f9 01       	movw	r30, r18
 3a6:	20 81       	ld	r18, Z
 3a8:	21 60       	ori	r18, 0x01	; 1
 3aa:	fc 01       	movw	r30, r24
 3ac:	20 83       	st	Z, r18
 3ae:	00 00       	nop
 3b0:	df 91       	pop	r29
 3b2:	cf 91       	pop	r28
 3b4:	08 95       	ret

000003b6 <Map>:
 * @param [in] OutMin: minimal value of output range
 * @param [in] OutMax: maximal value of output range
 * @return data in new number range
 *****************************************************************************/
int32_t Map(int32_t lData, int32_t InMin, int32_t InMax, int32_t OutMin, int32_t OutMax)
{
 3b6:	af 92       	push	r10
 3b8:	bf 92       	push	r11
 3ba:	cf 92       	push	r12
 3bc:	df 92       	push	r13
 3be:	ef 92       	push	r14
 3c0:	ff 92       	push	r15
 3c2:	0f 93       	push	r16
 3c4:	1f 93       	push	r17
 3c6:	cf 93       	push	r28
 3c8:	df 93       	push	r29
 3ca:	cd b7       	in	r28, 0x3d	; 61
 3cc:	de b7       	in	r29, 0x3e	; 62
 3ce:	60 97       	sbiw	r28, 0x10	; 16
 3d0:	0f b6       	in	r0, 0x3f	; 63
 3d2:	f8 94       	cli
 3d4:	de bf       	out	0x3e, r29	; 62
 3d6:	0f be       	out	0x3f, r0	; 63
 3d8:	cd bf       	out	0x3d, r28	; 61
 3da:	69 83       	std	Y+1, r22	; 0x01
 3dc:	7a 83       	std	Y+2, r23	; 0x02
 3de:	8b 83       	std	Y+3, r24	; 0x03
 3e0:	9c 83       	std	Y+4, r25	; 0x04
 3e2:	2d 83       	std	Y+5, r18	; 0x05
 3e4:	3e 83       	std	Y+6, r19	; 0x06
 3e6:	4f 83       	std	Y+7, r20	; 0x07
 3e8:	58 87       	std	Y+8, r21	; 0x08
 3ea:	e9 86       	std	Y+9, r14	; 0x09
 3ec:	fa 86       	std	Y+10, r15	; 0x0a
 3ee:	0b 87       	std	Y+11, r16	; 0x0b
 3f0:	1c 87       	std	Y+12, r17	; 0x0c
 3f2:	ad 86       	std	Y+13, r10	; 0x0d
 3f4:	be 86       	std	Y+14, r11	; 0x0e
 3f6:	cf 86       	std	Y+15, r12	; 0x0f
 3f8:	d8 8a       	std	Y+16, r13	; 0x10
	return((lData-InMin)*(OutMax-OutMin)/(InMax-InMin)+OutMin);
 3fa:	29 81       	ldd	r18, Y+1	; 0x01
 3fc:	3a 81       	ldd	r19, Y+2	; 0x02
 3fe:	4b 81       	ldd	r20, Y+3	; 0x03
 400:	5c 81       	ldd	r21, Y+4	; 0x04
 402:	8d 81       	ldd	r24, Y+5	; 0x05
 404:	9e 81       	ldd	r25, Y+6	; 0x06
 406:	af 81       	ldd	r26, Y+7	; 0x07
 408:	b8 85       	ldd	r27, Y+8	; 0x08
 40a:	79 01       	movw	r14, r18
 40c:	8a 01       	movw	r16, r20
 40e:	e8 1a       	sub	r14, r24
 410:	f9 0a       	sbc	r15, r25
 412:	0a 0b       	sbc	r16, r26
 414:	1b 0b       	sbc	r17, r27
 416:	2d 8d       	ldd	r18, Y+29	; 0x1d
 418:	3e 8d       	ldd	r19, Y+30	; 0x1e
 41a:	4f 8d       	ldd	r20, Y+31	; 0x1f
 41c:	58 a1       	ldd	r21, Y+32	; 0x20
 41e:	8d 85       	ldd	r24, Y+13	; 0x0d
 420:	9e 85       	ldd	r25, Y+14	; 0x0e
 422:	af 85       	ldd	r26, Y+15	; 0x0f
 424:	b8 89       	ldd	r27, Y+16	; 0x10
 426:	59 01       	movw	r10, r18
 428:	6a 01       	movw	r12, r20
 42a:	a8 1a       	sub	r10, r24
 42c:	b9 0a       	sbc	r11, r25
 42e:	ca 0a       	sbc	r12, r26
 430:	db 0a       	sbc	r13, r27
 432:	d6 01       	movw	r26, r12
 434:	c5 01       	movw	r24, r10
 436:	a8 01       	movw	r20, r16
 438:	97 01       	movw	r18, r14
 43a:	bc 01       	movw	r22, r24
 43c:	cd 01       	movw	r24, r26
 43e:	0e 94 52 02 	call	0x4a4	; 0x4a4 <__mulsi3>
 442:	7b 01       	movw	r14, r22
 444:	8c 01       	movw	r16, r24
 446:	29 85       	ldd	r18, Y+9	; 0x09
 448:	3a 85       	ldd	r19, Y+10	; 0x0a
 44a:	4b 85       	ldd	r20, Y+11	; 0x0b
 44c:	5c 85       	ldd	r21, Y+12	; 0x0c
 44e:	8d 81       	ldd	r24, Y+5	; 0x05
 450:	9e 81       	ldd	r25, Y+6	; 0x06
 452:	af 81       	ldd	r26, Y+7	; 0x07
 454:	b8 85       	ldd	r27, Y+8	; 0x08
 456:	28 1b       	sub	r18, r24
 458:	39 0b       	sbc	r19, r25
 45a:	4a 0b       	sbc	r20, r26
 45c:	5b 0b       	sbc	r21, r27
 45e:	c8 01       	movw	r24, r16
 460:	b7 01       	movw	r22, r14
 462:	0e 94 62 02 	call	0x4c4	; 0x4c4 <__divmodsi4>
 466:	da 01       	movw	r26, r20
 468:	c9 01       	movw	r24, r18
 46a:	9c 01       	movw	r18, r24
 46c:	ad 01       	movw	r20, r26
 46e:	8d 85       	ldd	r24, Y+13	; 0x0d
 470:	9e 85       	ldd	r25, Y+14	; 0x0e
 472:	af 85       	ldd	r26, Y+15	; 0x0f
 474:	b8 89       	ldd	r27, Y+16	; 0x10
 476:	82 0f       	add	r24, r18
 478:	93 1f       	adc	r25, r19
 47a:	a4 1f       	adc	r26, r20
 47c:	b5 1f       	adc	r27, r21
}
 47e:	bc 01       	movw	r22, r24
 480:	cd 01       	movw	r24, r26
 482:	60 96       	adiw	r28, 0x10	; 16
 484:	0f b6       	in	r0, 0x3f	; 63
 486:	f8 94       	cli
 488:	de bf       	out	0x3e, r29	; 62
 48a:	0f be       	out	0x3f, r0	; 63
 48c:	cd bf       	out	0x3d, r28	; 61
 48e:	df 91       	pop	r29
 490:	cf 91       	pop	r28
 492:	1f 91       	pop	r17
 494:	0f 91       	pop	r16
 496:	ff 90       	pop	r15
 498:	ef 90       	pop	r14
 49a:	df 90       	pop	r13
 49c:	cf 90       	pop	r12
 49e:	bf 90       	pop	r11
 4a0:	af 90       	pop	r10
 4a2:	08 95       	ret

000004a4 <__mulsi3>:
 4a4:	db 01       	movw	r26, r22
 4a6:	8f 93       	push	r24
 4a8:	9f 93       	push	r25
 4aa:	0e 94 81 02 	call	0x502	; 0x502 <__muluhisi3>
 4ae:	bf 91       	pop	r27
 4b0:	af 91       	pop	r26
 4b2:	a2 9f       	mul	r26, r18
 4b4:	80 0d       	add	r24, r0
 4b6:	91 1d       	adc	r25, r1
 4b8:	a3 9f       	mul	r26, r19
 4ba:	90 0d       	add	r25, r0
 4bc:	b2 9f       	mul	r27, r18
 4be:	90 0d       	add	r25, r0
 4c0:	11 24       	eor	r1, r1
 4c2:	08 95       	ret

000004c4 <__divmodsi4>:
 4c4:	05 2e       	mov	r0, r21
 4c6:	97 fb       	bst	r25, 7
 4c8:	1e f4       	brtc	.+6      	; 0x4d0 <__divmodsi4+0xc>
 4ca:	00 94       	com	r0
 4cc:	0e 94 79 02 	call	0x4f2	; 0x4f2 <__negsi2>
 4d0:	57 fd       	sbrc	r21, 7
 4d2:	07 d0       	rcall	.+14     	; 0x4e2 <__divmodsi4_neg2>
 4d4:	0e 94 8c 02 	call	0x518	; 0x518 <__udivmodsi4>
 4d8:	07 fc       	sbrc	r0, 7
 4da:	03 d0       	rcall	.+6      	; 0x4e2 <__divmodsi4_neg2>
 4dc:	4e f4       	brtc	.+18     	; 0x4f0 <__divmodsi4_exit>
 4de:	0c 94 79 02 	jmp	0x4f2	; 0x4f2 <__negsi2>

000004e2 <__divmodsi4_neg2>:
 4e2:	50 95       	com	r21
 4e4:	40 95       	com	r20
 4e6:	30 95       	com	r19
 4e8:	21 95       	neg	r18
 4ea:	3f 4f       	sbci	r19, 0xFF	; 255
 4ec:	4f 4f       	sbci	r20, 0xFF	; 255
 4ee:	5f 4f       	sbci	r21, 0xFF	; 255

000004f0 <__divmodsi4_exit>:
 4f0:	08 95       	ret

000004f2 <__negsi2>:
 4f2:	90 95       	com	r25
 4f4:	80 95       	com	r24
 4f6:	70 95       	com	r23
 4f8:	61 95       	neg	r22
 4fa:	7f 4f       	sbci	r23, 0xFF	; 255
 4fc:	8f 4f       	sbci	r24, 0xFF	; 255
 4fe:	9f 4f       	sbci	r25, 0xFF	; 255
 500:	08 95       	ret

00000502 <__muluhisi3>:
 502:	0e 94 ae 02 	call	0x55c	; 0x55c <__umulhisi3>
 506:	a5 9f       	mul	r26, r21
 508:	90 0d       	add	r25, r0
 50a:	b4 9f       	mul	r27, r20
 50c:	90 0d       	add	r25, r0
 50e:	a4 9f       	mul	r26, r20
 510:	80 0d       	add	r24, r0
 512:	91 1d       	adc	r25, r1
 514:	11 24       	eor	r1, r1
 516:	08 95       	ret

00000518 <__udivmodsi4>:
 518:	a1 e2       	ldi	r26, 0x21	; 33
 51a:	1a 2e       	mov	r1, r26
 51c:	aa 1b       	sub	r26, r26
 51e:	bb 1b       	sub	r27, r27
 520:	fd 01       	movw	r30, r26
 522:	0d c0       	rjmp	.+26     	; 0x53e <__udivmodsi4_ep>

00000524 <__udivmodsi4_loop>:
 524:	aa 1f       	adc	r26, r26
 526:	bb 1f       	adc	r27, r27
 528:	ee 1f       	adc	r30, r30
 52a:	ff 1f       	adc	r31, r31
 52c:	a2 17       	cp	r26, r18
 52e:	b3 07       	cpc	r27, r19
 530:	e4 07       	cpc	r30, r20
 532:	f5 07       	cpc	r31, r21
 534:	20 f0       	brcs	.+8      	; 0x53e <__udivmodsi4_ep>
 536:	a2 1b       	sub	r26, r18
 538:	b3 0b       	sbc	r27, r19
 53a:	e4 0b       	sbc	r30, r20
 53c:	f5 0b       	sbc	r31, r21

0000053e <__udivmodsi4_ep>:
 53e:	66 1f       	adc	r22, r22
 540:	77 1f       	adc	r23, r23
 542:	88 1f       	adc	r24, r24
 544:	99 1f       	adc	r25, r25
 546:	1a 94       	dec	r1
 548:	69 f7       	brne	.-38     	; 0x524 <__udivmodsi4_loop>
 54a:	60 95       	com	r22
 54c:	70 95       	com	r23
 54e:	80 95       	com	r24
 550:	90 95       	com	r25
 552:	9b 01       	movw	r18, r22
 554:	ac 01       	movw	r20, r24
 556:	bd 01       	movw	r22, r26
 558:	cf 01       	movw	r24, r30
 55a:	08 95       	ret

0000055c <__umulhisi3>:
 55c:	a2 9f       	mul	r26, r18
 55e:	b0 01       	movw	r22, r0
 560:	b3 9f       	mul	r27, r19
 562:	c0 01       	movw	r24, r0
 564:	a3 9f       	mul	r26, r19
 566:	70 0d       	add	r23, r0
 568:	81 1d       	adc	r24, r1
 56a:	11 24       	eor	r1, r1
 56c:	91 1d       	adc	r25, r1
 56e:	b2 9f       	mul	r27, r18
 570:	70 0d       	add	r23, r0
 572:	81 1d       	adc	r24, r1
 574:	11 24       	eor	r1, r1
 576:	91 1d       	adc	r25, r1
 578:	08 95       	ret

0000057a <_exit>:
 57a:	f8 94       	cli

0000057c <__stop_program>:
 57c:	ff cf       	rjmp	.-2      	; 0x57c <__stop_program>
